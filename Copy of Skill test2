{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"12zQCdQMaE92fS936IXCUMOa42-tez8CR","timestamp":1693984320739}],"authorship_tag":"ABX9TyMNFL+ggRGrH1e0oH1yM20B"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"id":"P2q7_ydi0S9o","executionInfo":{"status":"ok","timestamp":1693976025494,"user_tz":420,"elapsed":794,"user":{"displayName":"Shreyas","userId":"01015910919445914520"}}},"outputs":[],"source":["import pandas as pd\n","import numpy as np\n","import matplotlib.pyplot as plt"]},{"cell_type":"code","source":["data=pd.read_csv(\"/content/AMC.csv\")"],"metadata":{"id":"mhOGtEz01t5y","executionInfo":{"status":"ok","timestamp":1693978748166,"user_tz":420,"elapsed":10,"user":{"displayName":"Shreyas","userId":"01015910919445914520"}}},"execution_count":23,"outputs":[]},{"cell_type":"code","source":["data.describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"id":"KBEM-aTd10ho","executionInfo":{"status":"ok","timestamp":1693978750061,"user_tz":420,"elapsed":23,"user":{"displayName":"Shreyas","userId":"01015910919445914520"}},"outputId":"11b32754-ce54-4911-e719-f35a743c2bae"},"execution_count":24,"outputs":[{"output_type":"execute_result","data":{"text/plain":["              Open         High          Low        Close    Adj Close  \\\n","count  1257.000000  1257.000000  1257.000000  1257.000000  1257.000000   \n","mean    117.888225   123.182086   112.703432   117.586349   117.327470   \n","std     101.242886   107.858414    96.214502   101.568557   101.517153   \n","min      17.558823    17.911764    16.852942    17.470589    17.470589   \n","25%      47.735294    49.235294    45.000000    47.029411    47.029411   \n","50%      87.176468    88.985291    83.699120    86.294121    86.002617   \n","75%     137.205887   142.191177   132.089111   136.235291   135.698929   \n","max     541.235291   640.764709   501.617645   551.911743   551.911743   \n","\n","             Volume  \n","count  1.257000e+03  \n","mean   4.242476e+06  \n","std    8.001572e+06  \n","min    6.187500e+04  \n","25%    3.208080e+05  \n","50%    2.055253e+06  \n","75%    4.647231e+06  \n","max    8.686575e+07  "],"text/html":["\n","  <div id=\"df-3d86ea67-83bf-4f3c-90b3-c142f167b217\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Open</th>\n","      <th>High</th>\n","      <th>Low</th>\n","      <th>Close</th>\n","      <th>Adj Close</th>\n","      <th>Volume</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>1257.000000</td>\n","      <td>1257.000000</td>\n","      <td>1257.000000</td>\n","      <td>1257.000000</td>\n","      <td>1257.000000</td>\n","      <td>1.257000e+03</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>117.888225</td>\n","      <td>123.182086</td>\n","      <td>112.703432</td>\n","      <td>117.586349</td>\n","      <td>117.327470</td>\n","      <td>4.242476e+06</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>101.242886</td>\n","      <td>107.858414</td>\n","      <td>96.214502</td>\n","      <td>101.568557</td>\n","      <td>101.517153</td>\n","      <td>8.001572e+06</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>17.558823</td>\n","      <td>17.911764</td>\n","      <td>16.852942</td>\n","      <td>17.470589</td>\n","      <td>17.470589</td>\n","      <td>6.187500e+04</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>47.735294</td>\n","      <td>49.235294</td>\n","      <td>45.000000</td>\n","      <td>47.029411</td>\n","      <td>47.029411</td>\n","      <td>3.208080e+05</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>87.176468</td>\n","      <td>88.985291</td>\n","      <td>83.699120</td>\n","      <td>86.294121</td>\n","      <td>86.002617</td>\n","      <td>2.055253e+06</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>137.205887</td>\n","      <td>142.191177</td>\n","      <td>132.089111</td>\n","      <td>136.235291</td>\n","      <td>135.698929</td>\n","      <td>4.647231e+06</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>541.235291</td>\n","      <td>640.764709</td>\n","      <td>501.617645</td>\n","      <td>551.911743</td>\n","      <td>551.911743</td>\n","      <td>8.686575e+07</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3d86ea67-83bf-4f3c-90b3-c142f167b217')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-3d86ea67-83bf-4f3c-90b3-c142f167b217 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-3d86ea67-83bf-4f3c-90b3-c142f167b217');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-5dc2d1a0-9ecc-47ee-ac68-fbc3e24c0839\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-5dc2d1a0-9ecc-47ee-ac68-fbc3e24c0839')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-5dc2d1a0-9ecc-47ee-ac68-fbc3e24c0839 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":24}]},{"cell_type":"code","source":["data.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"qcKw3jY112oA","executionInfo":{"status":"ok","timestamp":1693978753142,"user_tz":420,"elapsed":606,"user":{"displayName":"Shreyas","userId":"01015910919445914520"}},"outputId":"c9019073-ed96-4056-b7d3-66a71fcc7183"},"execution_count":25,"outputs":[{"output_type":"execute_result","data":{"text/plain":["         Date        Open        High         Low       Close   Adj Close  \\\n","0  2018-08-24  168.970581  171.176468  167.647064  168.970581  165.656082   \n","1  2018-08-27  168.970581  169.658829  165.000000  165.000000  161.763397   \n","2  2018-08-28  165.000000  169.411758  163.235291  168.970581  165.656082   \n","3  2018-08-29  168.529404  169.852936  167.205887  167.205887  163.925995   \n","4  2018-08-30  166.323532  167.647064  164.558823  165.882355  162.628418   \n","\n","   Volume  \n","0  147447  \n","1  168461  \n","2  135920  \n","3  102543  \n","4   90071  "],"text/html":["\n","  <div id=\"df-bba7df02-3cf8-443f-8bb4-680177cc9bcb\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Date</th>\n","      <th>Open</th>\n","      <th>High</th>\n","      <th>Low</th>\n","      <th>Close</th>\n","      <th>Adj Close</th>\n","      <th>Volume</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2018-08-24</td>\n","      <td>168.970581</td>\n","      <td>171.176468</td>\n","      <td>167.647064</td>\n","      <td>168.970581</td>\n","      <td>165.656082</td>\n","      <td>147447</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2018-08-27</td>\n","      <td>168.970581</td>\n","      <td>169.658829</td>\n","      <td>165.000000</td>\n","      <td>165.000000</td>\n","      <td>161.763397</td>\n","      <td>168461</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2018-08-28</td>\n","      <td>165.000000</td>\n","      <td>169.411758</td>\n","      <td>163.235291</td>\n","      <td>168.970581</td>\n","      <td>165.656082</td>\n","      <td>135920</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2018-08-29</td>\n","      <td>168.529404</td>\n","      <td>169.852936</td>\n","      <td>167.205887</td>\n","      <td>167.205887</td>\n","      <td>163.925995</td>\n","      <td>102543</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2018-08-30</td>\n","      <td>166.323532</td>\n","      <td>167.647064</td>\n","      <td>164.558823</td>\n","      <td>165.882355</td>\n","      <td>162.628418</td>\n","      <td>90071</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-bba7df02-3cf8-443f-8bb4-680177cc9bcb')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-bba7df02-3cf8-443f-8bb4-680177cc9bcb button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-bba7df02-3cf8-443f-8bb4-680177cc9bcb');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-3cab85bf-ebe4-4888-a377-168fe5d8eb7b\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-3cab85bf-ebe4-4888-a377-168fe5d8eb7b')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-3cab85bf-ebe4-4888-a377-168fe5d8eb7b button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":25}]},{"cell_type":"code","source":["data.tail()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"BrsOA2RO135Q","executionInfo":{"status":"ok","timestamp":1693978755378,"user_tz":420,"elapsed":17,"user":{"displayName":"Shreyas","userId":"01015910919445914520"}},"outputId":"52d0d915-42f6-43fe-d8ad-caae21bab632"},"execution_count":26,"outputs":[{"output_type":"execute_result","data":{"text/plain":["            Date       Open       High        Low      Close  Adj Close  \\\n","1252  2023-08-17  32.382351  35.823528  32.117645  35.647057  35.647057   \n","1253  2023-08-18  35.823528  36.970589  34.058823  36.088234  36.088234   \n","1254  2023-08-21  35.294117  35.558823  26.911764  27.529411  27.529411   \n","1255  2023-08-22  27.352942  27.441175  21.705881  22.500000  22.500000   \n","1256  2023-08-23  19.500000  22.000000  19.400000  19.600000  19.600000   \n","\n","        Volume  \n","1252   8100839  \n","1253   5854627  \n","1254  12887423  \n","1255  12404185  \n","1256  19625261  "],"text/html":["\n","  <div id=\"df-76254e20-87df-4205-8ca9-98e372d8b2c4\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Date</th>\n","      <th>Open</th>\n","      <th>High</th>\n","      <th>Low</th>\n","      <th>Close</th>\n","      <th>Adj Close</th>\n","      <th>Volume</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1252</th>\n","      <td>2023-08-17</td>\n","      <td>32.382351</td>\n","      <td>35.823528</td>\n","      <td>32.117645</td>\n","      <td>35.647057</td>\n","      <td>35.647057</td>\n","      <td>8100839</td>\n","    </tr>\n","    <tr>\n","      <th>1253</th>\n","      <td>2023-08-18</td>\n","      <td>35.823528</td>\n","      <td>36.970589</td>\n","      <td>34.058823</td>\n","      <td>36.088234</td>\n","      <td>36.088234</td>\n","      <td>5854627</td>\n","    </tr>\n","    <tr>\n","      <th>1254</th>\n","      <td>2023-08-21</td>\n","      <td>35.294117</td>\n","      <td>35.558823</td>\n","      <td>26.911764</td>\n","      <td>27.529411</td>\n","      <td>27.529411</td>\n","      <td>12887423</td>\n","    </tr>\n","    <tr>\n","      <th>1255</th>\n","      <td>2023-08-22</td>\n","      <td>27.352942</td>\n","      <td>27.441175</td>\n","      <td>21.705881</td>\n","      <td>22.500000</td>\n","      <td>22.500000</td>\n","      <td>12404185</td>\n","    </tr>\n","    <tr>\n","      <th>1256</th>\n","      <td>2023-08-23</td>\n","      <td>19.500000</td>\n","      <td>22.000000</td>\n","      <td>19.400000</td>\n","      <td>19.600000</td>\n","      <td>19.600000</td>\n","      <td>19625261</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-76254e20-87df-4205-8ca9-98e372d8b2c4')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-76254e20-87df-4205-8ca9-98e372d8b2c4 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-76254e20-87df-4205-8ca9-98e372d8b2c4');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-8d457d39-2653-4eff-b7f5-88915dd2f1d0\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-8d457d39-2653-4eff-b7f5-88915dd2f1d0')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-8d457d39-2653-4eff-b7f5-88915dd2f1d0 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":26}]},{"cell_type":"code","source":["data.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ehfVoT1_18RH","executionInfo":{"status":"ok","timestamp":1693978757411,"user_tz":420,"elapsed":9,"user":{"displayName":"Shreyas","userId":"01015910919445914520"}},"outputId":"e9e504f9-9f63-4335-c085-d544a1053c63"},"execution_count":27,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 1257 entries, 0 to 1256\n","Data columns (total 7 columns):\n"," #   Column     Non-Null Count  Dtype  \n","---  ------     --------------  -----  \n"," 0   Date       1257 non-null   object \n"," 1   Open       1257 non-null   float64\n"," 2   High       1257 non-null   float64\n"," 3   Low        1257 non-null   float64\n"," 4   Close      1257 non-null   float64\n"," 5   Adj Close  1257 non-null   float64\n"," 6   Volume     1257 non-null   int64  \n","dtypes: float64(5), int64(1), object(1)\n","memory usage: 68.9+ KB\n"]}]},{"cell_type":"code","source":["data.nunique()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"DFHS0zZS2B72","executionInfo":{"status":"ok","timestamp":1693978759760,"user_tz":420,"elapsed":4,"user":{"displayName":"Shreyas","userId":"01015910919445914520"}},"outputId":"ba46c070-a4e2-438c-ae14-8641c7f7f2ab"},"execution_count":28,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Date         1257\n","Open          942\n","High         1006\n","Low           982\n","Close         958\n","Adj Close    1030\n","Volume       1257\n","dtype: int64"]},"metadata":{},"execution_count":28}]},{"cell_type":"code","source":["data.isnull().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"VDyRUrM42Dro","executionInfo":{"status":"ok","timestamp":1693978761192,"user_tz":420,"elapsed":5,"user":{"displayName":"Shreyas","userId":"01015910919445914520"}},"outputId":"cbf02ae2-a711-4b94-d8fb-7617be01e174"},"execution_count":29,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Date         0\n","Open         0\n","High         0\n","Low          0\n","Close        0\n","Adj Close    0\n","Volume       0\n","dtype: int64"]},"metadata":{},"execution_count":29}]},{"cell_type":"code","source":["data.isnull().sum()/(len(data))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"p0a6Lt942FR-","executionInfo":{"status":"ok","timestamp":1693978763497,"user_tz":420,"elapsed":8,"user":{"displayName":"Shreyas","userId":"01015910919445914520"}},"outputId":"4b55cfc4-3668-402e-bfc1-eb9353f343db"},"execution_count":30,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Date         0.0\n","Open         0.0\n","High         0.0\n","Low          0.0\n","Close        0.0\n","Adj Close    0.0\n","Volume       0.0\n","dtype: float64"]},"metadata":{},"execution_count":30}]},{"cell_type":"code","source":["data = data.drop(['Close'], axis=1)\n","data.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"hpvDcH4E2Gs2","executionInfo":{"status":"ok","timestamp":1693978766773,"user_tz":420,"elapsed":778,"user":{"displayName":"Shreyas","userId":"01015910919445914520"}},"outputId":"f63678ca-30de-4902-9828-9ab2ec0ca1b1"},"execution_count":31,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 1257 entries, 0 to 1256\n","Data columns (total 6 columns):\n"," #   Column     Non-Null Count  Dtype  \n","---  ------     --------------  -----  \n"," 0   Date       1257 non-null   object \n"," 1   Open       1257 non-null   float64\n"," 2   High       1257 non-null   float64\n"," 3   Low        1257 non-null   float64\n"," 4   Adj Close  1257 non-null   float64\n"," 5   Volume     1257 non-null   int64  \n","dtypes: float64(4), int64(1), object(1)\n","memory usage: 59.0+ KB\n"]}]},{"cell_type":"code","source":["from datetime import date\n","current_year = date.today().year\n","data['Date'] = current_year - data['Open']\n","data.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"QLS2NqnZ2Inu","executionInfo":{"status":"ok","timestamp":1693978770894,"user_tz":420,"elapsed":21,"user":{"displayName":"Shreyas","userId":"01015910919445914520"}},"outputId":"ec40c7b9-c99a-4d61-98b4-8d92ca17c27c"},"execution_count":32,"outputs":[{"output_type":"execute_result","data":{"text/plain":["          Date        Open        High         Low   Adj Close  Volume\n","0  1854.029419  168.970581  171.176468  167.647064  165.656082  147447\n","1  1854.029419  168.970581  169.658829  165.000000  161.763397  168461\n","2  1858.000000  165.000000  169.411758  163.235291  165.656082  135920\n","3  1854.470596  168.529404  169.852936  167.205887  163.925995  102543\n","4  1856.676468  166.323532  167.647064  164.558823  162.628418   90071"],"text/html":["\n","  <div id=\"df-4709686d-c499-42a8-a73b-4802d3d3e2cf\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Date</th>\n","      <th>Open</th>\n","      <th>High</th>\n","      <th>Low</th>\n","      <th>Adj Close</th>\n","      <th>Volume</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1854.029419</td>\n","      <td>168.970581</td>\n","      <td>171.176468</td>\n","      <td>167.647064</td>\n","      <td>165.656082</td>\n","      <td>147447</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1854.029419</td>\n","      <td>168.970581</td>\n","      <td>169.658829</td>\n","      <td>165.000000</td>\n","      <td>161.763397</td>\n","      <td>168461</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1858.000000</td>\n","      <td>165.000000</td>\n","      <td>169.411758</td>\n","      <td>163.235291</td>\n","      <td>165.656082</td>\n","      <td>135920</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1854.470596</td>\n","      <td>168.529404</td>\n","      <td>169.852936</td>\n","      <td>167.205887</td>\n","      <td>163.925995</td>\n","      <td>102543</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1856.676468</td>\n","      <td>166.323532</td>\n","      <td>167.647064</td>\n","      <td>164.558823</td>\n","      <td>162.628418</td>\n","      <td>90071</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4709686d-c499-42a8-a73b-4802d3d3e2cf')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-4709686d-c499-42a8-a73b-4802d3d3e2cf button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-4709686d-c499-42a8-a73b-4802d3d3e2cf');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-a5a738e2-274b-4caf-816d-a333e03fc758\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-a5a738e2-274b-4caf-816d-a333e03fc758')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-a5a738e2-274b-4caf-816d-a333e03fc758 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":32}]},{"cell_type":"code","source":["data.describe().T"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":266},"id":"Zx6gl7Xf2acu","executionInfo":{"status":"ok","timestamp":1693976212609,"user_tz":420,"elapsed":696,"user":{"displayName":"Shreyas","userId":"01015910919445914520"}},"outputId":"5b660b6e-37f1-4252-c1ab-091d6768adfe"},"execution_count":14,"outputs":[{"output_type":"execute_result","data":{"text/plain":["            count          mean           std           min            25%  \\\n","Date       1257.0  1.905112e+03  1.012429e+02   1481.764709    1885.794113   \n","Open       1257.0  1.178882e+02  1.012429e+02     17.558823      47.735294   \n","High       1257.0  1.231821e+02  1.078584e+02     17.911764      49.235294   \n","Low        1257.0  1.127034e+02  9.621450e+01     16.852942      45.000000   \n","Adj Close  1257.0  1.173275e+02  1.015172e+02     17.470589      47.029411   \n","Volume     1257.0  4.242476e+06  8.001572e+06  61875.000000  320808.000000   \n","\n","                    50%           75%           max  \n","Date       1.935824e+03  1.975265e+03  2.005441e+03  \n","Open       8.717647e+01  1.372059e+02  5.412353e+02  \n","High       8.898529e+01  1.421912e+02  6.407647e+02  \n","Low        8.369912e+01  1.320891e+02  5.016176e+02  \n","Adj Close  8.600262e+01  1.356989e+02  5.519117e+02  \n","Volume     2.055253e+06  4.647231e+06  8.686575e+07  "],"text/html":["\n","  <div id=\"df-3e818593-08a4-4de2-9b19-03daa00a6935\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>count</th>\n","      <th>mean</th>\n","      <th>std</th>\n","      <th>min</th>\n","      <th>25%</th>\n","      <th>50%</th>\n","      <th>75%</th>\n","      <th>max</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Date</th>\n","      <td>1257.0</td>\n","      <td>1.905112e+03</td>\n","      <td>1.012429e+02</td>\n","      <td>1481.764709</td>\n","      <td>1885.794113</td>\n","      <td>1.935824e+03</td>\n","      <td>1.975265e+03</td>\n","      <td>2.005441e+03</td>\n","    </tr>\n","    <tr>\n","      <th>Open</th>\n","      <td>1257.0</td>\n","      <td>1.178882e+02</td>\n","      <td>1.012429e+02</td>\n","      <td>17.558823</td>\n","      <td>47.735294</td>\n","      <td>8.717647e+01</td>\n","      <td>1.372059e+02</td>\n","      <td>5.412353e+02</td>\n","    </tr>\n","    <tr>\n","      <th>High</th>\n","      <td>1257.0</td>\n","      <td>1.231821e+02</td>\n","      <td>1.078584e+02</td>\n","      <td>17.911764</td>\n","      <td>49.235294</td>\n","      <td>8.898529e+01</td>\n","      <td>1.421912e+02</td>\n","      <td>6.407647e+02</td>\n","    </tr>\n","    <tr>\n","      <th>Low</th>\n","      <td>1257.0</td>\n","      <td>1.127034e+02</td>\n","      <td>9.621450e+01</td>\n","      <td>16.852942</td>\n","      <td>45.000000</td>\n","      <td>8.369912e+01</td>\n","      <td>1.320891e+02</td>\n","      <td>5.016176e+02</td>\n","    </tr>\n","    <tr>\n","      <th>Adj Close</th>\n","      <td>1257.0</td>\n","      <td>1.173275e+02</td>\n","      <td>1.015172e+02</td>\n","      <td>17.470589</td>\n","      <td>47.029411</td>\n","      <td>8.600262e+01</td>\n","      <td>1.356989e+02</td>\n","      <td>5.519117e+02</td>\n","    </tr>\n","    <tr>\n","      <th>Volume</th>\n","      <td>1257.0</td>\n","      <td>4.242476e+06</td>\n","      <td>8.001572e+06</td>\n","      <td>61875.000000</td>\n","      <td>320808.000000</td>\n","      <td>2.055253e+06</td>\n","      <td>4.647231e+06</td>\n","      <td>8.686575e+07</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3e818593-08a4-4de2-9b19-03daa00a6935')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-3e818593-08a4-4de2-9b19-03daa00a6935 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-3e818593-08a4-4de2-9b19-03daa00a6935');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-25f0a151-dfaa-423b-82b7-8057f20c9742\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-25f0a151-dfaa-423b-82b7-8057f20c9742')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-25f0a151-dfaa-423b-82b7-8057f20c9742 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":14}]},{"cell_type":"code","source":["print(data.Date.unique())\n","print(data.Open.unique())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"rPevuH1e2ctu","executionInfo":{"status":"ok","timestamp":1693979054916,"user_tz":420,"elapsed":12,"user":{"displayName":"Shreyas","userId":"01015910919445914520"}},"outputId":"32bbac5b-3b64-45e6-d034-5f2b968e384f"},"execution_count":33,"outputs":[{"output_type":"stream","name":"stdout","text":["[1854.029419 1858.       1854.470596 1856.676468 1857.558823 1854.911758\n"," 1853.588242 1851.382355 1850.941177 1846.970596 1846.529419 1849.176468\n"," 1846.088242 1837.705887 1848.735291 1847.411758 1844.764709 1838.147064\n"," 1839.470596 1843.       1847.852936 1845.647064 1841.764709 1848.294113\n"," 1846.882355 1850.676468 1849.794113 1849.617645 1859.323532 1858.529419\n"," 1856.764709 1851.735291 1848.558823 1847.235291 1850.588242 1851.294113\n"," 1864.264709 1860.029419 1863.558823 1858.176468 1850.058823 1853.058823\n"," 1852.264709 1854.647064 1854.735291 1859.764709 1860.382355 1869.470596\n"," 1884.382355 1889.764709 1885.529419 1886.235291 1893.735291 1899.029411\n"," 1906.352943 1904.588234 1900.794121 1899.470589 1898.323532 1904.323532\n"," 1901.676468 1899.294121 1898.147057 1898.588234 1895.5      1897.352943\n"," 1895.147057 1888.352936 1887.735291 1893.205887 1895.323532 1897.794121\n"," 1899.823532 1904.941177 1907.676468 1914.647057 1914.029411 1913.323532\n"," 1914.911766 1912.705879 1917.029411 1910.058823 1903.441177 1897.617645\n"," 1892.941177 1901.235298 1901.588234 1899.647057 1897.882355 1896.911766\n"," 1898.676468 1898.058823 1899.382355 1903.088234 1901.147057 1896.029411\n"," 1899.735298 1898.941177 1896.382355 1894.882355 1897.970589 1899.558823\n"," 1902.382355 1905.823532 1901.764709 1906.529411 1905.647057 1904.411766\n"," 1901.852943 1901.941177 1905.470589 1902.558823 1900.882355 1902.647057\n"," 1900.176468 1884.823532 1880.852936 1884.911758 1885.088242 1889.5\n"," 1895.058823 1892.676468 1893.117645 1889.676468 1891.088242 1887.558823\n"," 1890.294113 1886.5      1891.264709 1892.411758 1892.323532 1890.647064\n"," 1891.970596 1893.294113 1890.558823 1880.941177 1880.411758 1880.588242\n"," 1881.823532 1877.941177 1877.411758 1876.705887 1882.264709 1888.176468\n"," 1888.264709 1886.764709 1887.205887 1883.058823 1887.029419 1889.323532\n"," 1893.382355 1891.794113 1891.705887 1891.441177 1901.323532 1903.176468\n"," 1903.617645 1904.852943 1905.205879 1903.264709 1906.617645 1907.5\n"," 1908.470589 1908.294121 1911.029411 1913.058823 1916.588234 1918.176468\n"," 1917.647057 1918.441177 1924.352943 1925.941177 1927.617645 1925.5\n"," 1928.147057 1926.558823 1926.117645 1923.558823 1921.529411 1920.823532\n"," 1927.       1929.117645 1934.676468 1938.911766 1939.617645 1939.529411\n"," 1936.088234 1941.558823 1943.323532 1940.588234 1945.088234 1943.411766\n"," 1941.647057 1938.735298 1940.147057 1936.705879 1938.117645 1935.205879\n"," 1932.470589 1931.852943 1923.294121 1922.941177 1919.323532 1919.764709\n"," 1924.176468 1922.147057 1924.529411 1925.058823 1915.794121 1917.382355\n"," 1916.058823 1919.588234 1921.705879 1928.588234 1926.382355 1922.411766\n"," 1922.588234 1922.058823 1922.235298 1924.882355 1922.676468 1922.764709\n"," 1923.029411 1924.264709 1921.264709 1917.911766 1918.705879 1920.911766\n"," 1920.205879 1920.117645 1919.411766 1918.882355 1918.088234 1924.441177\n"," 1928.058823 1927.705879 1928.5      1927.088234 1927.529411 1930.\n"," 1933.529411 1937.235298 1937.411766 1935.911766 1940.411766 1941.117645\n"," 1942.       1943.147057 1940.323532 1940.764709 1939.794121 1941.735298\n"," 1936.352943 1935.647057 1938.470589 1939.264709 1937.058823 1936.617645\n"," 1935.294121 1938.823532 1941.382355 1945.617645 1943.764709 1945.705879\n"," 1946.676468 1948.088234 1951.264709 1952.764709 1951.705879 1948.882355\n"," 1952.411766 1950.117645 1950.294121 1947.382355 1949.764709 1952.852943\n"," 1953.470589 1952.147057 1950.735298 1951.882355 1950.205879 1948.441177\n"," 1949.323532 1954.352943 1954.       1954.794121 1957.088234 1956.382355\n"," 1958.588234 1958.5      1959.117649 1957.264709 1959.029411 1960.264706\n"," 1964.235294 1966.176472 1965.64706  1965.205883 1962.558823 1959.558823\n"," 1958.058823 1958.941177 1959.382355 1961.852943 1963.352943 1965.558823\n"," 1966.970589 1962.470589 1964.588238 1962.911766 1966.       1963.705883\n"," 1960.970589 1963.882355 1963.       1963.441177 1961.14706  1960.441177\n"," 1960.352943 1958.411766 1955.058823 1960.       1961.235294 1965.029411\n"," 1972.617649 1967.323528 1969.176472 1971.294117 1973.588238 1982.235294\n"," 1988.14706  1986.205883 1987.882355 1999.352942 1995.294119 1999.705883\n"," 1999.882353 2002.882353 1993.       1994.5      1992.117647 1988.411766\n"," 1992.470589 1991.5      1992.558825 1995.205883 1996.529411 1998.82353\n"," 2002.529411 2000.941177 1995.029411 1996.088236 1993.882353 2002.352942\n"," 2003.5      2004.029411 2002.264706 1989.029411 1994.588236 1994.764706\n"," 1993.088236 1994.852942 1989.294117 1982.941177 1978.794117 1986.735294\n"," 1981.794117 1987.       1987.617649 1986.470589 1966.529411 1972.088238\n"," 1978.705883 1985.5      1983.558823 1980.64706  1980.470589 1981.617649\n"," 1981.705883 1981.882355 1974.64706  1973.14706  1978.882355 1978.617649\n"," 1975.794117 1976.5      1977.382355 1972.       1967.676472 1974.205883\n"," 1972.794117 1975.176472 1969.882355 1975.264706 1968.294117 1975.617649\n"," 1978.970589 1982.676472 1985.411766 1988.5      1984.705883 1986.117649\n"," 1983.382355 1983.470589 1984.264706 1981.       1984.441177 1984.794117\n"," 1984.529411 1985.852943 1986.382355 1986.823528 1987.705883 1987.088238\n"," 1986.64706  1987.264706 1981.970589 1981.529411 1978.       1973.941177\n"," 1972.529411 1973.852943 1975.882355 1972.882355 1974.823528 1974.911766\n"," 1971.735294 1965.735294 1967.14706  1971.911766 1961.764706 1965.294117\n"," 1967.588238 1969.529411 1971.470589 1974.294117 1972.970589 1976.941177\n"," 1982.058823 1978.529411 1979.941177 1980.823528 1985.058823 1986.558823\n"," 1987.441177 1988.588238 1995.735294 1997.941177 1997.676472 1993.794119\n"," 1995.647058 1996.882353 1995.382353 1997.235294 1997.588236 1999.264706\n"," 1999.617647 2001.117647 2002.705883 2001.82353  2001.558825 1985.323528\n"," 1987.794117 1994.492943 1995.911764 1996.705883 1996.441177 1995.82353\n"," 1995.117647 1994.32353  1992.029411 1986.294117 1984.088238 1983.911766\n"," 1989.911766 1991.147058 1985.764706 1989.558823 1987.352943 1994.411764\n"," 1998.294119 1997.852942 1999.970589 1998.911764 2000.235294 2000.147058\n"," 1999.794119 2001.470589 2003.852942 2003.588236 2005.441177 2005.088236\n"," 2004.647058 2004.558825 2003.941177 2003.235294 2002.441177 2003.411764\n"," 1993.970589 1997.32353  1981.441177 1978.088238 1843.529419 1917.294121\n"," 1896.735298 1873.       1939.352943 1944.911766 1946.235298 1959.735294\n"," 1962.294117 1973.411766 1969.794117 1973.764706 1974.117649 1970.676472\n"," 1961.5      1959.205883 1926.911766 1944.823532 1942.352943 1944.029411\n"," 1947.735298 1940.235298 1925.764709 1929.029411 1933.352943 1915.529411\n"," 1902.823532 1906.176468 1896.470589 1898.235298 1906.970589 1921.882355\n"," 1943.941177 1931.941177 1932.029411 1931.235298 1932.735298 1933.882355\n"," 1934.147057 1938.294121 1939.705879 1946.588234 1943.588234 1935.823532\n"," 1934.764709 1933.970589 1928.676468 1919.941177 1927.264709 1933.794121\n"," 1938.073532 1939.970589 1940.676468 1935.382355 1934.5      1905.558823\n"," 1897.264709 1908.735298 1911.911766 1911.735298 1913.764709 1902.911766\n"," 1866.294113 1858.794113 1742.323517 1741.617645 1691.941162 1510.352966\n"," 1592.5      1560.823517 1518.647064 1562.411774 1600.088226 1628.764709\n"," 1565.676483 1507.794128 1527.647064 1546.529419 1482.470581 1481.764709\n"," 1545.647064 1519.705872 1511.411774 1531.088226 1536.823517 1501.882324\n"," 1528.882355 1521.294128 1557.382355 1551.294128 1602.117645 1661.676483\n"," 1596.205872 1632.205872 1665.029419 1680.647064 1738.882355 1689.205872\n"," 1732.264709 1712.941162 1654.176483 1668.647064 1689.647064 1684.882355\n"," 1670.147064 1692.911774 1687.705872 1691.764709 1691.411774 1712.764709\n"," 1719.205872 1748.764709 1728.117645 1734.647064 1697.411774 1744.352936\n"," 1750.264709 1724.323517 1714.264709 1693.705872 1700.147064 1723.882355\n"," 1713.911774 1694.852936 1626.823517 1645.441162 1669.970581 1654.352936\n"," 1633.352936 1606.882355 1635.911774 1638.823517 1625.941162 1608.029419\n"," 1615.088226 1589.323517 1565.764709 1573.882355 1613.323517 1612.882355\n"," 1616.235291 1652.852936 1661.5      1683.294128 1660.75     1671.735291\n"," 1669.       1679.764709 1694.323517 1712.5      1675.264709 1697.764709\n"," 1702.176483 1698.470581 1688.411774 1697.852936 1699.       1689.470581\n"," 1668.294128 1663.044128 1643.941162 1664.323517 1662.205872 1693.794128\n"," 1703.323517 1700.676483 1702.441162 1713.382355 1711.176483 1708.441162\n"," 1691.058838 1661.323517 1666.617645 1659.823517 1648.176483 1648.617645\n"," 1680.735291 1673.588226 1666.970581 1652.676483 1649.411774 1648.970581\n"," 1656.735291 1659.029419 1677.647064 1702.794128 1685.411774 1698.558838\n"," 1716.735291 1764.735291 1750.970581 1775.058823 1758.029419 1751.411774\n"," 1742.852936 1764.029419 1780.441177 1838.5      1805.941177 1799.323532\n"," 1807.794113 1767.470596 1763.588226 1758.823517 1768.352936 1772.852936\n"," 1774.352936 1778.191177 1776.735291 1769.235291 1781.102936 1787.676468\n"," 1800.911758 1820.411758 1814.676468 1825.176468 1825.352936 1821.294113\n"," 1823.147064 1843.617645 1848.382355 1859.5      1858.970596 1866.205887\n"," 1879.705887 1882.794113 1879.970596 1894.176468 1889.411758 1862.852936\n"," 1876.970596 1885.176468 1891.529419 1879.176468 1865.058823 1858.705887\n"," 1856.852936 1863.735291 1851.117645 1855.441177 1869.823532 1875.382355\n"," 1890.911758 1866.735291 1864.220596 1855.352936 1864.088242 1858.617645\n"," 1873.794113 1884.294113 1887.911758 1894.970596 1890.823532 1884.558823\n"," 1882.882355 1841.147064 1771.       1804.441177 1801.264709 1815.823532\n"," 1818.470596 1840.794113 1840.970596 1863.911758 1856.411758 1868.147064\n"," 1861.794113 1863.294113 1869.647064 1860.647064 1869.382355 1871.941177\n"," 1878.382355 1873.970596 1889.235291 1888.705887 1884.647064 1893.691177\n"," 1902.735298 1921.       1934.367645 1916.147057 1918.       1910.676468\n"," 1910.323532 1906.705879 1930.529411 1911.382355 1884.029419 1910.235298\n"," 1913.411766 1916.941177 1905.029411 1911.558823 1921.352943 1921.088234\n"," 1915.176468 1918.352943 1910.5      1910.147057 1915.617645 1912.\n"," 1904.764709 1904.058823 1911.117645 1912.352943 1900.441177 1890.205887\n"," 1885.352936 1877.235291 1875.647064 1885.794113 1893.647064 1897.441177\n"," 1893.911758 1896.558823 1886.676468 1871.235291 1855.529419 1873.264709\n"," 1810.705887 1818.294113 1816.617645 1810.617645 1785.294113 1811.147064\n"," 1806.029419 1830.117645 1863.823532 1928.411766 1938.382355 1943.235298\n"," 1942.617645 1945.529411 1951.794121 1938.029411 1939.       1936.970589\n"," 1942.970589 1945.970589 1946.941177 1954.882355 1955.5      1959.823528\n"," 1957.176468 1962.64706  1961.411766 1957.882355 1969.       1973.323528\n"," 1968.205883 1968.470589 1964.764706 1966.441177 1962.735294 1962.823528\n"," 1967.764706 1972.264706 1971.558823 1975.529411 1974.470589 1969.970589\n"," 1952.235298 1953.911766 1954.705879 1958.676468 1956.558823 1958.147057\n"," 1955.411766 1957.352943 1957.       1950.823532 1963.264706 1967.941177\n"," 1969.617649 1970.14706  1976.852943 1980.029411 1977.64706  1985.941177\n"," 1980.294117 1966.794117 1974.735294 1970.058823 1975.088238 1976.676472\n"," 1976.411766 1976.235294 1969.220589 1971.205883 1977.029411 1981.088238\n"," 1982.852943 1982.764706 1976.764706 1976.058823 1966.352943 1967.5\n"," 1968.911766 1964.985294 1968.029411 1969.705883 1972.352943 1975.\n"," 1983.029411 1981.264706 1983.823528 1984.176472 1983.205883 1977.911766\n"," 1979.676472 1983.734413 1980.911766 1979.323528 1979.411766 1979.764706\n"," 1977.294117 1979.14706  1978.176472 1979.5      1981.176472 1982.632355\n"," 1982.14706  1982.5      1980.817352 1980.117649 1978.264706 1980.205883\n"," 1982.411766 1986.911766 1984.970589 1984.617649 1975.705883 1977.558823\n"," 1980.735294 1993.617647 1992.205883 1990.529411 1990.617649 1987.176472]\n","[168.970581 165.       168.529404 166.323532 165.441177 168.088242\n"," 169.411758 171.617645 172.058823 176.029404 176.470581 173.823532\n"," 176.911758 185.294113 174.264709 175.588242 178.235291 184.852936\n"," 183.529404 180.       175.147064 177.352936 181.235291 174.705887\n"," 176.117645 172.323532 173.205887 173.382355 163.676468 164.470581\n"," 166.235291 171.264709 174.441177 175.764709 172.411758 171.705887\n"," 158.735291 162.970581 159.441177 164.823532 172.941177 169.941177\n"," 170.735291 168.352936 168.264709 163.235291 162.617645 153.529404\n"," 138.617645 133.235291 137.470581 136.764709 129.264709 123.970589\n"," 116.647057 118.411766 122.205879 123.529411 124.676468 118.676468\n"," 121.323532 123.705879 124.852943 124.411766 127.5      125.647057\n"," 127.852943 134.647064 135.264709 129.794113 127.676468 125.205879\n"," 123.176468 118.058823 115.323532 108.352943 108.970589 109.676468\n"," 108.088234 110.294121 105.970589 112.941177 119.558823 125.382355\n"," 130.058823 121.764702 121.411766 123.352943 125.117645 126.088234\n"," 124.323532 124.941177 123.617645 119.911766 121.852943 126.970589\n"," 123.264702 124.058823 126.617645 128.117645 125.029411 123.441177\n"," 120.617645 117.176468 121.235291 116.470589 117.352943 118.588234\n"," 121.147057 121.058823 117.529411 120.441177 122.117645 120.352943\n"," 122.823532 138.176468 142.147064 138.088242 137.911758 133.5\n"," 127.941177 130.323532 129.882355 133.323532 131.911758 135.441177\n"," 132.705887 136.5      131.735291 130.588242 130.676468 132.352936\n"," 131.029404 129.705887 132.441177 142.058823 142.588242 142.411758\n"," 141.176468 145.058823 145.588242 146.294113 140.735291 134.823532\n"," 134.735291 136.235291 135.794113 139.941177 135.970581 133.676468\n"," 129.617645 131.205887 131.294113 131.558823 121.676468 119.823532\n"," 119.382355 118.147057 117.794121 119.735291 116.382355 115.5\n"," 114.529411 114.705879 111.970589 109.941177 106.411766 104.823532\n"," 105.352943 104.558823  98.647057  97.058823  95.382355  97.5\n","  94.852943  96.441177  96.882355  99.441177 101.470589 102.176468\n","  96.        93.882355  88.323532  84.088234  83.382355  83.470589\n","  86.911766  81.441177  79.676468  82.411766  77.911766  79.588234\n","  81.352943  84.264702  82.852943  86.294121  84.882355  87.794121\n","  90.529411  91.147057  99.705879 100.058823 103.676468 103.235291\n","  98.823532 100.852943  98.470589  97.941177 107.205879 105.617645\n"," 106.941177 103.411766 101.294121  94.411766  96.617645 100.588234\n"," 100.411766 100.941177 100.764702  98.117645 100.323532 100.235291\n","  99.970589  98.735291 101.735291 105.088234 104.294121 102.088234\n"," 102.794121 102.882355 103.588234 104.117645 104.911766  98.558823\n","  94.941177  95.294121  94.5       95.911766  95.470589  93.\n","  89.470589  85.764702  85.588234  87.088234  82.588234  81.882355\n","  81.        79.852943  82.676468  82.235291  83.205879  81.264702\n","  86.647057  87.352943  84.529411  83.735291  85.941177  86.382355\n","  87.705879  84.176468  81.617645  77.382355  79.235291  77.294121\n","  76.323532  74.911766  71.735291  70.235291  71.294121  74.117645\n","  70.588234  72.882355  72.705879  75.617645  73.235291  70.147057\n","  69.529411  70.852943  72.264702  71.117645  72.794121  74.558823\n","  73.676468  68.647057  69.        68.205879  65.911766  66.617645\n","  64.411766  64.5       63.882351  65.735291  63.970589  62.735294\n","  58.764706  56.823528  57.35294   57.794117  60.441177  63.441177\n","  64.941177  64.058823  63.617645  61.147057  59.647057  57.441177\n","  56.029411  60.529411  58.411762  60.088234  57.        59.294117\n","  62.029411  59.117645  60.        59.558823  61.85294   62.558823\n","  62.647057  64.588234  67.941177  63.        61.764706  57.970589\n","  50.382351  55.676472  53.823528  51.705883  49.411762  40.764706\n","  34.85294   36.794117  35.117645  23.647058  27.705881  23.294117\n","  23.117647  20.117647  30.        28.5       30.882353  34.588234\n","  30.529411  31.5       30.441175  27.794117  26.470589  24.17647\n","  20.470589  22.058823  27.970589  26.911764  29.117647  20.647058\n","  19.5       18.970589  20.735294  33.970589  28.411764  28.235294\n","  29.911764  28.147058  33.705883  40.058823  44.205883  36.264706\n","  41.205883  36.        35.382351  36.529411  56.470589  50.911762\n","  44.294117  37.5       39.441177  42.35294   42.529411  41.382351\n","  41.294117  41.117645  48.35294   49.85294   44.117645  44.382351\n","  47.205883  46.5       45.617645  51.        55.323528  48.794117\n","  50.205883  47.823528  53.117645  47.735294  54.705883  47.382351\n","  44.029411  40.323528  37.588234  34.5       38.294117  36.882351\n","  39.617645  39.529411  38.735294  42.        38.558823  38.205883\n","  38.470589  37.147057  36.617645  36.176472  35.294117  35.911762\n","  36.35294   35.735294  41.029411  41.470589  45.        49.058823\n","  50.470589  49.147057  47.117645  50.117645  48.176472  48.088234\n","  51.264706  57.264706  55.85294   51.088234  61.235294  57.705883\n","  55.411762  53.470589  51.529411  48.705883  50.029411  46.058823\n","  40.941177  44.470589  43.058823  42.176472  37.941177  36.441177\n","  35.558823  34.411762  27.264706  25.058823  25.323528  29.205881\n","  27.352942  26.117647  27.617647  25.764706  25.411764  23.735294\n","  23.382353  21.882353  20.294117  21.17647   21.441175  37.676472\n","  35.205883  28.507057  27.088236  26.294117  26.558823  27.17647\n","  27.882353  28.67647   30.970589  36.705883  38.911762  39.088234\n","  33.088234  31.852942  37.235294  33.441177  35.647057  28.588236\n","  24.705881  25.147058  23.029411  24.088236  22.764706  22.852942\n","  23.205881  21.529411  19.147058  19.411764  17.558823  17.911764\n","  18.352942  18.441175  19.058823  19.764706  20.558823  19.588236\n","  29.029411  25.67647   41.558823  44.911762 179.470581 105.705879\n"," 126.264702 150.        83.647057  78.088234  76.764702  63.264706\n","  60.705883  49.588234  53.205883  49.235294  48.882351  52.323528\n","  61.5       63.794117  96.088234  78.176468  80.647057  78.970589\n","  75.264702  82.764702  97.235291  93.970589  89.647057 107.470589\n"," 120.176468 116.823532 126.529411 124.764702 116.029411 101.117645\n","  79.058823  91.058823  90.970589  91.764702  90.264702  89.117645\n","  88.852943  84.705879  83.294121  76.411766  79.411766  87.176468\n","  88.235291  89.029411  94.323532 103.058823  95.735291  89.205879\n","  84.926468  83.029411  82.323532  87.617645  88.5      117.441177\n"," 125.735291 114.264702 111.088234 111.264702 109.235291 120.088234\n"," 156.705887 164.205887 280.676483 281.382355 331.058838 512.647034\n"," 430.5      462.176483 504.352936 460.588226 422.911774 394.235291\n"," 457.323517 515.205872 495.352936 476.470581 540.529419 541.235291\n"," 477.352936 503.294128 511.588226 491.911774 486.176483 521.117676\n"," 494.117645 501.705872 465.617645 471.705872 420.882355 361.323517\n"," 426.794128 390.794128 357.970581 342.352936 284.117645 333.794128\n"," 290.735291 310.058838 368.823517 354.352936 333.352936 338.117645\n"," 352.852936 330.088226 335.294128 331.235291 331.588226 310.235291\n"," 303.794128 274.235291 294.882355 288.352936 325.588226 278.647064\n"," 272.735291 298.676483 308.735291 329.294128 322.852936 299.117645\n"," 309.088226 328.147064 396.176483 377.558838 353.029419 368.647064\n"," 389.647064 416.117645 387.088226 384.176483 397.058838 414.970581\n"," 407.911774 433.676483 457.235291 449.117645 409.676483 410.117645\n"," 406.764709 370.147064 361.5      339.705872 362.25     351.264709\n"," 354.       343.235291 328.676483 310.5      347.735291 325.235291\n"," 320.823517 324.529419 334.588226 325.147064 324.       333.529419\n"," 354.705872 359.955872 379.058838 358.676483 360.794128 329.205872\n"," 319.676483 322.323517 320.558838 309.617645 311.823517 314.558838\n"," 331.941162 361.676483 356.382355 363.176483 374.823517 374.382355\n"," 342.264709 349.411774 356.029419 370.323517 373.588226 374.029419\n"," 366.264709 363.970581 345.352936 320.205872 337.588226 324.441162\n"," 306.264709 258.264709 272.029419 247.941177 264.970581 271.588226\n"," 280.147064 258.970581 242.558823 184.5      217.058823 223.676468\n"," 215.205887 255.529404 259.411774 264.176483 254.647064 250.147064\n"," 248.647064 244.808823 246.264709 253.764709 241.897064 235.323532\n"," 222.088242 202.588242 208.323532 197.823532 197.647064 201.705887\n"," 199.852936 179.382355 174.617645 163.5      164.029404 156.794113\n"," 143.294113 140.205887 143.029404 128.823532 133.588242 160.147064\n"," 146.029404 137.823532 131.470581 143.823532 157.941177 164.294113\n"," 166.147064 159.264709 171.882355 167.558823 153.176468 147.617645\n"," 132.088242 156.264709 158.779404 167.647064 158.911758 164.382355\n"," 149.205887 138.705887 135.088242 128.029404 132.176468 138.441177\n"," 140.117645 181.852936 252.       218.558823 221.735291 207.176468\n"," 204.529404 182.205887 182.029404 159.088242 166.588242 154.852936\n"," 161.205887 159.705887 153.352936 162.352936 153.617645 151.058823\n"," 144.617645 149.029404 133.764709 134.294113 138.352936 129.308823\n"," 120.264702 102.        88.632355 106.852943 105.       112.323532\n"," 112.676468 116.294121  92.470589 111.617645 138.970581 112.764702\n"," 109.588234 106.058823 117.970589 111.441177 101.647057 101.911766\n"," 107.823532 104.647057 112.5      112.852943 107.382355 111.\n"," 118.235291 118.941177 111.882355 110.647057 122.558823 132.794113\n"," 137.647064 145.764709 147.352936 137.205887 129.352936 125.558823\n"," 129.088242 126.441177 136.323532 151.764709 167.470581 149.735291\n"," 212.294113 204.705887 206.382355 212.382355 237.705887 211.852936\n"," 216.970581 192.882355 159.176468  94.588234  84.617645  79.764702\n","  80.382355  77.470589  71.205879  84.970589  84.        86.029411\n","  80.029411  77.029411  76.058823  68.117645  67.5       63.176472\n","  65.823532  60.35294   61.588234  65.117645  54.        49.676472\n","  54.794117  54.529411  58.235294  56.558823  60.264706  60.176472\n","  55.235294  50.735294  51.441177  47.470589  48.529411  53.029411\n","  70.764702  69.088234  68.294121  64.323532  66.441177  64.852943\n","  67.588234  65.647057  66.        72.176468  59.735294  55.058823\n","  53.382351  52.85294   46.147057  42.970589  45.35294   37.058823\n","  42.705883  56.205883  48.264706  52.941177  47.911762  46.323528\n","  46.588234  46.764706  53.779411  51.794117  45.970589  41.911762\n","  40.147057  40.235294  46.235294  46.941177  56.647057  55.5\n","  54.088234  58.014706  54.970589  53.294117  50.647057  48.\n","  39.970589  41.735294  39.176472  38.823528  39.794117  45.088234\n","  43.323528  39.265587  42.088234  43.676472  43.588234  43.235294\n","  45.705883  43.85294   44.823528  43.5       41.823528  40.367645\n","  40.85294   40.5       42.182648  42.882351  44.735294  42.794117\n","  40.588234  36.088234  38.029411  38.382351  47.294117  45.441177\n","  42.264706  29.382353  30.794117  32.470589  32.382351  35.823528]\n"]}]},{"cell_type":"code","source":["cat_cols = data.select_dtypes(include=['object']).columns\n","num_cols = data.select_dtypes(include=np.number).columns.tolist()\n","\n","print(\"Categorical variables:\")\n","print(cat_cols)\n","print(\"Numerical variables:\")\n","print(num_cols)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"72d329cv2kX-","executionInfo":{"status":"ok","timestamp":1693976253943,"user_tz":420,"elapsed":11,"user":{"displayName":"Shreyas","userId":"01015910919445914520"}},"outputId":"5dff7827-c737-4641-f07d-dff7b9086dc6"},"execution_count":17,"outputs":[{"output_type":"stream","name":"stdout","text":["Categorical variables:\n","Index([], dtype='object')\n","Numerical variables:\n","['Date', 'Open', 'High', 'Low', 'Adj Close', 'Volume']\n"]}]},{"cell_type":"code","source":["data1 = data.dropna()\n","print(data1)\n","data.info"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"8xD411fR2p_H","executionInfo":{"status":"ok","timestamp":1693979936115,"user_tz":420,"elapsed":12,"user":{"displayName":"Shreyas","userId":"01015910919445914520"}},"outputId":"7e2f8022-5c62-4c00-ee6a-09b54ca5878b"},"execution_count":38,"outputs":[{"output_type":"stream","name":"stdout","text":["             Date        Open        High         Low   Adj Close    Volume\n","0     1854.029419  168.970581  171.176468  167.647064  165.656082    147447\n","1     1854.029419  168.970581  169.658829  165.000000  161.763397    168461\n","2     1858.000000  165.000000  169.411758  163.235291  165.656082    135920\n","3     1854.470596  168.529404  169.852936  167.205887  163.925995    102543\n","4     1856.676468  166.323532  167.647064  164.558823  162.628418     90071\n","...           ...         ...         ...         ...         ...       ...\n","1252  1990.617649   32.382351   35.823528   32.117645   35.647057   8100839\n","1253  1987.176472   35.823528   36.970589   34.058823   36.088234   5854627\n","1254  1987.705883   35.294117   35.558823   26.911764   27.529411  12887423\n","1255  1995.647058   27.352942   27.441175   21.705881   22.500000  12404185\n","1256  2003.500000   19.500000   22.000000   19.400000   19.600000  19625261\n","\n","[1257 rows x 6 columns]\n"]},{"output_type":"execute_result","data":{"text/plain":["<bound method DataFrame.info of              Date        Open        High         Low   Adj Close    Volume\n","0     1854.029419  168.970581  171.176468  167.647064  165.656082    147447\n","1     1854.029419  168.970581  169.658829  165.000000  161.763397    168461\n","2     1858.000000  165.000000  169.411758  163.235291  165.656082    135920\n","3     1854.470596  168.529404  169.852936  167.205887  163.925995    102543\n","4     1856.676468  166.323532  167.647064  164.558823  162.628418     90071\n","...           ...         ...         ...         ...         ...       ...\n","1252  1990.617649   32.382351   35.823528   32.117645   35.647057   8100839\n","1253  1987.176472   35.823528   36.970589   34.058823   36.088234   5854627\n","1254  1987.705883   35.294117   35.558823   26.911764   27.529411  12887423\n","1255  1995.647058   27.352942   27.441175   21.705881   22.500000  12404185\n","1256  2003.500000   19.500000   22.000000   19.400000   19.600000  19625261\n","\n","[1257 rows x 6 columns]>"]},"metadata":{},"execution_count":38}]},{"cell_type":"code","source":["data2 = data.dropna(axis=1)\n","print(data2)\n","data.info"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"yltqG4skCVSt","executionInfo":{"status":"ok","timestamp":1693979916771,"user_tz":420,"elapsed":778,"user":{"displayName":"Shreyas","userId":"01015910919445914520"}},"outputId":"431e09f5-c0c5-4e03-f4dd-8119ae51a21a"},"execution_count":37,"outputs":[{"output_type":"stream","name":"stdout","text":["             Date        Open        High         Low   Adj Close    Volume\n","0     1854.029419  168.970581  171.176468  167.647064  165.656082    147447\n","1     1854.029419  168.970581  169.658829  165.000000  161.763397    168461\n","2     1858.000000  165.000000  169.411758  163.235291  165.656082    135920\n","3     1854.470596  168.529404  169.852936  167.205887  163.925995    102543\n","4     1856.676468  166.323532  167.647064  164.558823  162.628418     90071\n","...           ...         ...         ...         ...         ...       ...\n","1252  1990.617649   32.382351   35.823528   32.117645   35.647057   8100839\n","1253  1987.176472   35.823528   36.970589   34.058823   36.088234   5854627\n","1254  1987.705883   35.294117   35.558823   26.911764   27.529411  12887423\n","1255  1995.647058   27.352942   27.441175   21.705881   22.500000  12404185\n","1256  2003.500000   19.500000   22.000000   19.400000   19.600000  19625261\n","\n","[1257 rows x 6 columns]\n"]},{"output_type":"execute_result","data":{"text/plain":["<bound method DataFrame.info of              Date        Open        High         Low   Adj Close    Volume\n","0     1854.029419  168.970581  171.176468  167.647064  165.656082    147447\n","1     1854.029419  168.970581  169.658829  165.000000  161.763397    168461\n","2     1858.000000  165.000000  169.411758  163.235291  165.656082    135920\n","3     1854.470596  168.529404  169.852936  167.205887  163.925995    102543\n","4     1856.676468  166.323532  167.647064  164.558823  162.628418     90071\n","...           ...         ...         ...         ...         ...       ...\n","1252  1990.617649   32.382351   35.823528   32.117645   35.647057   8100839\n","1253  1987.176472   35.823528   36.970589   34.058823   36.088234   5854627\n","1254  1987.705883   35.294117   35.558823   26.911764   27.529411  12887423\n","1255  1995.647058   27.352942   27.441175   21.705881   22.500000  12404185\n","1256  2003.500000   19.500000   22.000000   19.400000   19.600000  19625261\n","\n","[1257 rows x 6 columns]>"]},"metadata":{},"execution_count":37}]},{"cell_type":"code","source":["data3 = data.fillna(data.mean())\n","print(data3)\n","data.info"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"FkYiRrr9CXxb","executionInfo":{"status":"ok","timestamp":1693979955360,"user_tz":420,"elapsed":1030,"user":{"displayName":"Shreyas","userId":"01015910919445914520"}},"outputId":"3708361a-7fc7-416e-fade-b86e7ccd45aa"},"execution_count":39,"outputs":[{"output_type":"stream","name":"stdout","text":["             Date        Open        High         Low   Adj Close    Volume\n","0     1854.029419  168.970581  171.176468  167.647064  165.656082    147447\n","1     1854.029419  168.970581  169.658829  165.000000  161.763397    168461\n","2     1858.000000  165.000000  169.411758  163.235291  165.656082    135920\n","3     1854.470596  168.529404  169.852936  167.205887  163.925995    102543\n","4     1856.676468  166.323532  167.647064  164.558823  162.628418     90071\n","...           ...         ...         ...         ...         ...       ...\n","1252  1990.617649   32.382351   35.823528   32.117645   35.647057   8100839\n","1253  1987.176472   35.823528   36.970589   34.058823   36.088234   5854627\n","1254  1987.705883   35.294117   35.558823   26.911764   27.529411  12887423\n","1255  1995.647058   27.352942   27.441175   21.705881   22.500000  12404185\n","1256  2003.500000   19.500000   22.000000   19.400000   19.600000  19625261\n","\n","[1257 rows x 6 columns]\n"]},{"output_type":"execute_result","data":{"text/plain":["<bound method DataFrame.info of              Date        Open        High         Low   Adj Close    Volume\n","0     1854.029419  168.970581  171.176468  167.647064  165.656082    147447\n","1     1854.029419  168.970581  169.658829  165.000000  161.763397    168461\n","2     1858.000000  165.000000  169.411758  163.235291  165.656082    135920\n","3     1854.470596  168.529404  169.852936  167.205887  163.925995    102543\n","4     1856.676468  166.323532  167.647064  164.558823  162.628418     90071\n","...           ...         ...         ...         ...         ...       ...\n","1252  1990.617649   32.382351   35.823528   32.117645   35.647057   8100839\n","1253  1987.176472   35.823528   36.970589   34.058823   36.088234   5854627\n","1254  1987.705883   35.294117   35.558823   26.911764   27.529411  12887423\n","1255  1995.647058   27.352942   27.441175   21.705881   22.500000  12404185\n","1256  2003.500000   19.500000   22.000000   19.400000   19.600000  19625261\n","\n","[1257 rows x 6 columns]>"]},"metadata":{},"execution_count":39}]},{"cell_type":"code","source":["import pandas as pd\n","df=pd.read_csv(\"/content/AMC.csv\")\n","z_scores=(df-df.mean())/df.std()\n","outliers=df[abs(z_scores)>3]\n","print(\"univariate outliers:\",outliers)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"OlWtjcAJHVq8","executionInfo":{"status":"ok","timestamp":1693980947197,"user_tz":420,"elapsed":633,"user":{"displayName":"Shreyas","userId":"01015910919445914520"}},"outputId":"31967121-bbed-4a89-c6a5-4a690dedc52c"},"execution_count":42,"outputs":[{"output_type":"stream","name":"stdout","text":["univariate outliers:      Date  Open  High  Low  Close  Adj Close  Volume\n","0     NaN   NaN   NaN  NaN    NaN        NaN     NaN\n","1     NaN   NaN   NaN  NaN    NaN        NaN     NaN\n","2     NaN   NaN   NaN  NaN    NaN        NaN     NaN\n","3     NaN   NaN   NaN  NaN    NaN        NaN     NaN\n","4     NaN   NaN   NaN  NaN    NaN        NaN     NaN\n","...   ...   ...   ...  ...    ...        ...     ...\n","1252  NaN   NaN   NaN  NaN    NaN        NaN     NaN\n","1253  NaN   NaN   NaN  NaN    NaN        NaN     NaN\n","1254  NaN   NaN   NaN  NaN    NaN        NaN     NaN\n","1255  NaN   NaN   NaN  NaN    NaN        NaN     NaN\n","1256  NaN   NaN   NaN  NaN    NaN        NaN     NaN\n","\n","[1257 rows x 7 columns]\n"]},{"output_type":"stream","name":"stderr","text":["<ipython-input-42-9d326bfa4045>:3: FutureWarning: The default value of numeric_only in DataFrame.mean is deprecated. In a future version, it will default to False. In addition, specifying 'numeric_only=None' is deprecated. Select only valid columns or specify the value of numeric_only to silence this warning.\n","  z_scores=(df-df.mean())/df.std()\n","<ipython-input-42-9d326bfa4045>:3: FutureWarning: The default value of numeric_only in DataFrame.std is deprecated. In a future version, it will default to False. In addition, specifying 'numeric_only=None' is deprecated. Select only valid columns or specify the value of numeric_only to silence this warning.\n","  z_scores=(df-df.mean())/df.std()\n"]}]},{"cell_type":"code","source":[""],"metadata":{"id":"GL-WEeZ8OT1R"},"execution_count":null,"outputs":[]}]}